server:
  admin: true
  bind:
    host: 0.0.0.0
    port: 5000
  url: http://localhost:5000
  mimetype: application/json; charset=UTF-8
  encoding: utf-8
  gzip: false
  languages:
    - en-US
  pretty_print: true
  limits: 
    default_items: 100
    max_items: 10000
  map:
    url: https://tile.openstreetmap.org/{z}/{x}/{y}.png
    attribution: '&copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
logging:
  level: WARNING
#     logfile: /tmp/pygeoapi.log

metadata:
  identification:
    title:
      en: pygeoapi RISE EDR instance
    description:
      en: pygeoapi provides an API to geospatial data
    keywords:
      en:
        - geospatial
        - data
        - api
    keywords_type: theme
    terms_of_service: https://creativecommons.org/licenses/by/4.0/
    url: https://example.org
  license:
    name: CC-BY 4.0 license
    url: https://creativecommons.org/licenses/by/4.0/
  provider:
    name: Center for Geospatial Solutions
    url: http://cgs.earth
  contact:
    name: Loftus, Colton
    position: Software Developer
    city: Cambridge
    stateorprovince: Massachusetts
    country: USA
    email: cloftus@lincolninst.edu
    url: https://github.com/cgs-earth/RISE-EDR-Mappings/

resources:
  rise-edr:
    type: collection
    title: rise edr
    description: Mappings from the USBR's RISE API into the OGC EDR spec
    keywords:
      - open data
    extents:
      spatial:
        bbox: [-171.791110603, 18.91619, -66.96466, 71.3577635769]

        crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
    providers:
      # we define two providers here since in pygeoapi, the EDR provider needs a OAF provider
      # for the items endpoint
      - type: edr
        name: rise.rise_edr.RiseEDRProvider
        data: https://data.usbr.gov/
        cache: redis
      - type: feature
        name: rise.rise.RiseProvider
        data: https://data.usbr.gov/
        entity: Observation
        title_field: name
        cache: redis
